#!/bin/bash
#
# Copies personalization files into an SD card image
#

function copycufiles() {
    #
    # $1 has list of "|"-separated files to copy
    # $2 has destination directory
    #
    local citems=() fl
    IFS="|" read -a citems <<< "$1"
    for fl in "${citems[@]}"
    do
	logtoboth "> Copy file '$fl' to $2"
	cp $fl $2
    done
}

#
# Read configuration information from sdm (/etc/sdm/cparams)
#
declare -x SDMNSPAWN="Phase0"
source $SDMPT/etc/sdm/sdm-readparams

logtoboth "* Start Phase 0 image customization"
#
# These are ordered by: sdm, network, user, system, pi-hardware
# And then alphabetically within each group
#

logtoboth "*+Phase 0 sdm configuration"
if [ "$b1script" != "" ]
then
    logtoboth "> Copy --b1script '$b1script' to $SDMPT/etc/sdm/assets"
    cp $b1script $SDMPT/etc/sdm/assets
fi
#
# copy hotspot configuration file into the image
#
if [ "$hotspot" != "" ]
then
    logtoboth "> Copy hotspot configuration file to $SDMPT/etc/sdm/assets"
    cp $hotspot $SDMPT/etc/sdm/assets
fi

logtoboth "*+Phase 0 Network configuration"
if [ "$wpaconf" != "" ]    #First b/c it's most important
then
    logtoboth "> Copy wpa supplicant config from '$wpaconf' to $SDMPT/etc/wpa_supplicant/wpa_supplicant.conf"
    # Copy and strip carriage returns just in case
    tr -d '\r' < $wpaconf > $SDMPT/etc/wpa_supplicant/wpa_supplicant.conf
else
    logtoboth ">%Skip wpa_supplicant configuration per --nowpa"
fi
#
# Copy dhcpcd.conf extension into the image
#
if [ "$dhcpcd" != "" ]
then
    logtoboth "> Append dhcpcd.conf extension '$dhcpcd' to $SDMPT/etc/dhcpcd.conf"
    cat $dhcpcd >> $SDMPT/etc/dhcpcd.conf
# Don't need to do it this way, but keep for future reference
#    echo "dhcpcd=$(basename $dhcpcd)" >> $SDMPT/etc/sdm/auto-1piboot.conf
fi
#
# Copy exports file into the image
#
if [ "$exports" != "" ]
then
    logtoboth "> Append --exports file '$exports' to $SDMPT/etc/exports"
    cat $exports >> $SDMPT/etc/exports
fi

logtoboth "*+Phase 0 User configuration"
#
# Copy lxde-config config files into the image
#
for fm in $lxdeconflist
do
    cname="${fm}conf"
    fmconf="${!cname}"
    if [ "$fmconf" != "" ]
    then
	logtoboth "> Copy --lxde-config '$fm' config file '$fmconf' to $SDMPT/etc/sdm/assets"
	cp $fmconf $SDMPT/etc/sdm/assets
    fi
done
logtoboth "*+Phase 0 System configuration"
#
# Copy any specified cron files
#
for c in d hourly daily weekly monthly
do
    ct="cron$c"
    cf=${!ct}     #  (eval "cf=\$$ct" alternate way)
    [ "$cf" != "" ] && copycufiles "$cf" "$SDMPT/etc/cron.$c"
done

#
# Copy fstab extension into the image
#
if [ "$fstab" != "" ]
then
    logtoboth "> Copy fstab extension '$fstab' to $SDMPT/etc/sdm/assets and enable for FirstBoot"
    cp $fstab $SDMPT/etc/sdm/assets
    echo "fstab=$(basename $fstab)" >> $SDMPT/etc/sdm/auto-1piboot.conf
fi

#
# Copy user-specified modprobe config files into the image
#
[ "$modprobe" != "" ] && copycufiles "$modprobe" "$SDMPT/etc/modprobe.d"

#
# Copy user-specified motd file into the image
#
[ "$motd" != "" ] && logtoboth "> Copy file '$motd' to $SDMPT/etc/motd" && mv $SDMPT/etc/motd $SDMPT/etc/motd.sdm && cp $motd $SDMPT/etc/motd

#
# Copy user-specified sysctl config file into the image
#
[ "$sysctl" != "" ] && copycufiles "$sysctl" "$SDMPT/etc/sysctl.d"

#
# Copy systemd config files into the image
#
for c in login network resolve system timesync user
do
    nsdfn="sdfn${c}"
    fn="${!nsdfn}"
    if [ "$fn" != "" ]
    then
	logtoboth "> Copy systemd '$c' config file '$fn' to $SDMPT/etc/sdm/assets"
	cp $fn $SDMPT/etc/sdm/assets
    fi
done
#
# Copy any specified udev files
#
[ "$udev" != "" ] && copycufiles "$udev" "$SDMPT/etc/udev/rules.d"

logtoboth "*+Phase 0 Raspberry Pi-specific configuration"

if [ "$myuser" != "" -a $frenamepi -eq 0 ]
then
    #
    # Create user directory now, so that Custom Phase Script can copy into it if desired
    # Can't create the new user and fix directory ownership until sdm-phase1
    #
    [ ! -d $SDMPT/home/$myuser ] && logtoboth "> Create user '$myuser' home directory /home/$myuser" && mkdir -p $SDMPT/home/$myuser
fi

if [ "$cscript" != "" ]
then
    csfn="$SDMPT${sdmdir}/$(basename $cscript)"
    logtoboth "> Run Custom Phase Script '$csfn' Phase 0"
    $csfn 0
fi

if [ "$plugins" != "" ]
then
    runplugins 0
fi

logtoboth "* Phase 0 Completed"
