#!/bin/bash
#
# This is an sdm plugin for: sshhostkey
#
# The plugin is called three times: for Phase 0, Phase 1, and post-install.
#

function loadparams() {
    source $SDMPT/etc/sdm/sdm-readparams
}

# $1 is the phase: "0", "1", or "post-install"
# $2 is the argument list: arg1=val1|arg2=val2|arg3=val3| ...
#
# Main code for the Plugin
#
phase=$1
pfx="$(basename $0)"     #For messages
args="$2"
loadparams
vldargs="|import-keys|generate-keys|"
rqdargs="" # |list|of|required|args|or|nullstring|
assetdir="$SDMPT/etc/sdm/assets/$pfx"

if [ "$phase" == "0" ]
then
    #
    # In Phase 0 all references to directories in the image must be preceded by $SDMPT
    #
    logtoboth "* Plugin $pfx: Start Phase 0"
    plugin_getargs $pfx "$args" "$vldargs" "$rqdargs" || exit
    
    mkdir -p $assetdir
    mkdir -p $assetdir/keys
    if [ "$import__keys" != "" ]
    then
        [ -d $import__keys ] || logtobothex "? Plugin $pfx: Import key directory '$import__keys' not found"
        logtoboth "> Plugin $pfx: Copy import-keys directory '$import__keys' content to $assetdir"
        cp --target-directory=$assetdir/keys -- $import__keys/ssh_host_*_key
        cp --target-directory=$assetdir/keys -- $import__keys/ssh_host_*_key.pub
    fi
    logtoboth "* Plugin $pfx: Complete Phase 0"
elif [ "$phase" == "1" ]
then
    #
    # Phase 1 (in nspawn)
    #
    logtoboth "* Plugin $pfx: Start Phase 1"
    plugin_getargs $pfx "$args" "$vldargs" "$rqdargs"
    #logfreespace "at start of Plugin $pfx Phase 1"

    # We allow both generate-keys and import-keys at the same time.
    # This enables partial overwrites (e.g. import the RSA key, but re-gen everything else)
    if [ -v generate__keys ]
    then
        logtoboth "> Plugin $pfx: Deleting existing SSH host keys and generating new ones."
        rm -f /etc/ssh/ssh_host_*_key /etc/ssh/ssh_host_*_key.pub
        ssh-keygen -v -A > $assetdir/keygen.log 2>&1
        [ $? -ne 0 ] && logtobothex "? Plugin $pfx: ssh-keygen returned an error; see $assetdir/keygen.log"
    fi
    if [ "$import__keys" != "" ]
    then
        logtoboth "> Plugin $pfx: Copy SSH host keys from $assetdir to /etc/ssh directory"
        cp --target-directory=/etc/ssh -- $assetdir/keys/*
        setfileownmode "/etc/ssh/ssh_host_*_key" 600 root:root
        setfileownmode "/etc/ssh/ssh_host_*_key.pub" 644 root:root
    fi
    #
    #logfreespace "at end of $pfx Phase 1"
    logtoboth "* Plugin $pfx: Complete Phase 1"
elif [ "$phase" == "post-install" ]
then
    #
    # Plugin Post-install edits
    #
    logtoboth "* Plugin $pfx: Start Phase post-install"
    plugin_getargs $pfx "$args" "$vldargs" "$rqdargs"
    #logfreespace "at start of Plugin $pfx Phase post-install"
    #

    #
    #logfreespace "at end of $pfx Custom Phase post-install"
    logtoboth "* Plugin $pfx: Complete Phase post-install"
fi
